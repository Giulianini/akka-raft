plugins {
    id "scala"
    id "java-library"
}

group project.project_group
version project.project_version

sourceCompatibility = project.jdkVersion

repositories {
    jcenter()
}

dependencies {
    //JAVAFX
    implementation "com.jfoenix:jfoenix:${project.jfoenixVersion}" // Java 8
    implementation "org.kordamp.ikonli:ikonli-core:${project.ikonli_coreVersion}"
    implementation "org.kordamp.ikonli:ikonli-javafx:${project.ikonli_javafxVersion}"
    implementation "org.kordamp.ikonli:ikonli-material-pack:${project.ikonli_material_packVersion}"
    implementation "eu.hansolo.enzo:Enzo:${project.enzoVersion}"
    //SCALA
    implementation "org.scala-lang:scala-library:${project.scala_library}"
    testImplementation "junit:junit:${project.junit}"
    testImplementation "org.scalatest:scalatest_2.12:${project.scalatest}"
    testRuntimeOnly "org.scala-lang.modules:scala-xml_2.12:${project.scala_xml}"
    //LOGGING
    implementation group: "com.typesafe.akka", name: "akka-slf4j_2.12", version: "${project.akka_slf4j}"
    implementation group: "ch.qos.logback", name: "logback-classic", version: "${project.logback_classic}"
    //AKKA
    implementation group: "com.typesafe.akka", name: "akka-actor_2.12", version: "${project.akka_actor}"
    implementation group: "com.typesafe.akka", name: "akka-cluster_2.12", version: "${project.akka_cluster}"
    implementation group: "com.typesafe.akka", name: "akka-cluster-tools_2.12", version: "${project.akka_cluster_tool}"
    testImplementation group: "com.typesafe.akka", name: "akka-testkit_2.12", version: "${project.akka_test}"
}

task spec(dependsOn: ['testClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = ['-R', 'build/classes/scala/test', '-o']
    classpath = sourceSets.test.runtimeClasspath
}

test.dependsOn spec
check.dependsOn spec